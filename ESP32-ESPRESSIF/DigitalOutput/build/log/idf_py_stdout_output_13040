[1/11] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[2/11] Performing build step for 'bootloader'
[1/1] cd /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/bootloader/esp-idf/esptool_py && /home/etorob/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/etorob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/bootloader/bootloader.bin
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[3/11] No install step for 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/DigitalOutput.c.obj
[5/11] Linking C static library esp-idf/main/libmain.a
[6/11] Completed 'bootloader'
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/DigitalOutput.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable DigitalOutput.elf
[10/11] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/DigitalOutput.bin
[11/11] cd /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/esp-idf/esptool_py && /home/etorob/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/etorob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/partition_table/partition-table.bin /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/DigitalOutput/build/DigitalOutput.bin
DigitalOutput.bin binary size 0x2d330 bytes. Smallest app partition is 0x100000 bytes. 0xd2cd0 bytes (82%) free.
