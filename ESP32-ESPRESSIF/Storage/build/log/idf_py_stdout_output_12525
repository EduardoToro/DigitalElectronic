[1/10] Performing build step for 'bootloader'
[1/1] cd /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/bootloader/esp-idf/esptool_py && /home/etorob/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/etorob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/bootloader/bootloader.bin
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/Storage.c.obj
[4/10] Linking C static library esp-idf/main/libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/Storage.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable Storage.elf
[9/10] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/Storage.bin
[10/10] cd /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/esp-idf/esptool_py && /home/etorob/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/etorob/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/partition_table/partition-table.bin /home/etorob/Documentos/GitHub/DigitalElectronic/ESP32-ESPRESSIF/Storage/build/Storage.bin
Storage.bin binary size 0x30710 bytes. Smallest app partition is 0x100000 bytes. 0xcf8f0 bytes (81%) free.
